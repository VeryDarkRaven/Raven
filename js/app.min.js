/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/compTs/appTs.js":
/*!********************************!*\
  !*** ./src/js/compTs/appTs.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_spawn_animations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/spawn-animations.js */ "./src/js/compTs/modules/spawn-animations.js");
/* harmony import */ var _screen_control_arrows_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./screen-control-arrows.js */ "./src/js/compTs/screen-control-arrows.js");
/* harmony import */ var _sections_height_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sections-height.js */ "./src/js/compTs/sections-height.js");





/***/ }),

/***/ "./src/js/compTs/modules/spawn-animations.js":
/*!***************************************************!*\
  !*** ./src/js/compTs/modules/spawn-animations.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
function spawnAnim() {
    const animItems = document.querySelectorAll("[data-spawn-anim]");
    if (animItems.length > 0) {
        animItems.forEach((item) => {
            const itemHeight = item.offsetHeight;
            const itemOffset = item.getBoundingClientRect().top + window.scrollY;
            const animStart = item.hasAttribute("data-spawn-anim-start") ? +item.dataset.spawnAnimStart : 4;
            let animItemPoint = 0;
            if (itemHeight > window.innerHeight || itemHeight === undefined) {
                animItemPoint = window.innerHeight - window.innerHeight / animStart;
            }
            else {
                animItemPoint = window.innerHeight - itemHeight / animStart;
            }
            window.addEventListener("scroll", animOnScroll);
            animOnScroll();
            function animOnScroll() {
                if (scrollY > itemOffset - animItemPoint && scrollY < itemOffset + itemHeight ||
                    scrollY > itemOffset - animItemPoint && scrollY < itemOffset + window.innerHeight / animStart) {
                    item.classList.add("_anim_active");
                }
                else {
                    if (item.hasAttribute("data-spawn-anim-h")) {
                        item.classList.remove("_anim_active");
                    }
                }
            }
        });
    }
}
function checkForPreloader() {
    const preloader = document.querySelector("[data-prldr-screen]");
    if (preloader && !preloader.classList.contains("_hide")) {
        let checkForPreloader = setInterval(() => {
            if (preloader.classList.contains("_hide")) {
                spawnAnim();
                clearInterval(checkForPreloader);
            }
        }, 300);
    }
    else {
        spawnAnim();
    }
}
document.addEventListener("DOMContentLoaded", checkForPreloader);


/***/ }),

/***/ "./src/js/compTs/screen-control-arrows.js":
/*!************************************************!*\
  !*** ./src/js/compTs/screen-control-arrows.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createBlockPageObj": () => (/* binding */ createBlockPageObj),
/* harmony export */   "returnCurrectBlockPosition": () => (/* binding */ returnCurrectBlockPosition)
/* harmony export */ });
/* harmony import */ var _screen_scroll_animation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./screen-scroll-animation.js */ "./src/js/compTs/screen-scroll-animation.js");

function screenControlArrows(blocksPageObj) {
    const screenControlsBlock = document.querySelector(".scontrols");
    const screenControlButtonsBlock = screenControlsBlock.querySelector(".scontrols__scroll-buttons");
    const buttonsList = screenControlButtonsBlock.querySelectorAll(".scroll-button");
    let currectPosition = returnCurrectBlockPosition(blocksPageObj);
    hideInactiveButton();
    buttonsList.forEach((item) => item.addEventListener("click", checkDirectionButton));
    function checkDirectionButton(e) {
        e.preventDefault;
        const button = e.currentTarget;
        buttonsList.forEach((item) => {
            item.removeEventListener("click", checkDirectionButton);
            item.disabled = true;
        });
        for (const key in buttonDirectionAndClick) {
            if (button.classList.contains(key)) {
                clickButton(key);
                break;
            }
        }
    }
    function clickButton(direction) {
        let currectBlock = blocksPageObj.blocksArr[currectPosition[0]][currectPosition[1]];
        (0,_screen_scroll_animation_js__WEBPACK_IMPORTED_MODULE_0__.scrollAnim)().start()[direction]();
        currectBlock.classList.remove("_anim_active");
        currectBlock.addEventListener("transitionend", clickButtonTransitionEnd);
        function clickButtonTransitionEnd() {
            blocksPageObj.blocksArr[currectPosition[0]][currectPosition[1]].removeEventListener("transitionend", clickButtonTransitionEnd);
            buttonDirectionAndClick[direction]();
            let newCurrectBlock = blocksPageObj.blocksArr[currectPosition[0]][currectPosition[1]];
            window.scrollTo(0, newCurrectBlock.offsetTop);
            hideInactiveButton();
            (0,_screen_scroll_animation_js__WEBPACK_IMPORTED_MODULE_0__.scrollAnim)().end()[direction]();
            newCurrectBlock.addEventListener("transitionend", newCurrectBlockTransitionEnd);
            function newCurrectBlockTransitionEnd(e) {
                newCurrectBlock.removeEventListener("transitionend", newCurrectBlockTransitionEnd);
                buttonsList.forEach((item) => {
                    item.addEventListener("click", checkDirectionButton);
                    item.disabled = false;
                });
            }
        }
    }
    const clickTopButton = () => { currectPosition[0]--; };
    const clickRightButton = () => { currectPosition[1]++; };
    const clickBottomButton = () => { currectPosition[0]++; };
    const clickLeftButton = () => { currectPosition[1]--; };
    const buttonDirectionAndClick = {
        top: clickTopButton,
        right: clickRightButton,
        bottom: clickBottomButton,
        left: clickLeftButton
    };
    function hideInactiveButton() {
        const movementOptionsObj = createMovementOptionsObj();
        const movementOptionsArr = Object.entries(movementOptionsObj);
        const inactiveMovementArr = movementOptionsArr.filter((item) => !item[1]);
        const inactiveButtonArr = Array.from(buttonsList).filter((button) => {
            return inactiveMovementArr.some((item) => button.classList.contains(item[0]));
        });
        buttonsList.forEach((button) => {
            if (inactiveButtonArr.some((inactiveButton) => button === inactiveButton)) {
                button.classList.add("button_inactive");
            }
            else {
                button.classList.remove("button_inactive");
            }
        });
    }
    function createMovementOptionsObj() {
        const columnOfPageBlocksNum = Math.max.apply(null, blocksPageObj.positionArr.map((item) => item.length));
        const rowsOfPageBlocksNum = blocksPageObj.positionArr.length;
        return {
            top: currectPosition[0] - 1 >= 0 ? true : false,
            right: currectPosition[1] + 1 < columnOfPageBlocksNum ? true : false,
            bottom: currectPosition[0] + 1 < rowsOfPageBlocksNum ? true : false,
            left: currectPosition[1] - 1 >= 0 ? true : false,
        };
    }
}
screenControlArrows(createBlockPageObj());
function createBlockPageObj() {
    const blocksPagePositionsArr = [
        [1, 2],
        [3, 4],
    ];
    const blocksPageArr = fillingPagePositionArr(blocksPagePositionsArr);
    const startIndex = createStartIndex(blocksPagePositionsArr);
    return {
        blocksArr: blocksPageArr,
        positionArr: blocksPagePositionsArr,
        startBlockIndex: startIndex
    };
    function fillingPagePositionArr(blocksPagePositionsArr) {
        const wrapper = document.querySelector("[data-wrapper]");
        const blocksPage = wrapper.children;
        return blocksPagePositionsArr.map((item) => {
            return item.map((num) => {
                return blocksPage[num - 1];
            });
        });
    }
    function createStartIndex(matrix) {
        const indexRow = matrix.findIndex((item) => item.indexOf(1) !== -1);
        const indexCol = matrix[indexRow].indexOf(1);
        return [indexRow, indexCol];
    }
}
function returnCurrectBlockPosition(blocksPageObj) {
    const elem = returnCurrectBlock(".wrapper");
    const indexRow = blocksPageObj.blocksArr.findIndex((item) => item.indexOf(elem) !== -1);
    const indexCol = blocksPageObj.blocksArr[indexRow].indexOf(elem);
    return [indexRow, indexCol];
}
function returnCurrectBlock(parent) {
    const elems = document.elementsFromPoint(window.innerWidth / 2, window.innerHeight / 2).filter((item) => item.closest(parent));
    return elems[elems.length - 2];
}



/***/ }),

/***/ "./src/js/compTs/screen-scroll-animation.js":
/*!**************************************************!*\
  !*** ./src/js/compTs/screen-scroll-animation.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scrollAnim": () => (/* binding */ scrollAnim)
/* harmony export */ });
/* harmony import */ var _screen_control_arrows_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./screen-control-arrows.js */ "./src/js/compTs/screen-control-arrows.js");

function scrollAnim() {
    const blocksPageObj = (0,_screen_control_arrows_js__WEBPACK_IMPORTED_MODULE_0__.createBlockPageObj)();
    const currectBlockPosition = (0,_screen_control_arrows_js__WEBPACK_IMPORTED_MODULE_0__.returnCurrectBlockPosition)(blocksPageObj);
    const currectBlock = blocksPageObj.blocksArr[currectBlockPosition[0]][currectBlockPosition[1]];
    return {
        start: startScrollAnim,
        end: endScrollAnim
    };
    function startScrollAnim() {
        return {
            top: startTopScrollAnim,
            right: startRightScrollAnim,
            bottom: startBottomScrollAnim,
            left: startLeftScrollAnim
        };
    }
    function endScrollAnim() {
        return {
            top: endTopScrollAnim,
            right: endRightScrollAnim,
            bottom: endBottomScrollAnim,
            left: endLeftScrollAnim
        };
    }
    function startTopScrollAnim() {
        const nextBlock = blocksPageObj.blocksArr[currectBlockPosition[0] - 1][currectBlockPosition[1]];
        let progress = 0;
        anim();
        function anim() {
            progress += 0.05;
            if (progress < 1) {
                currectBlock.style.transform = `translate(0, ${25 * progress}%)`;
                nextBlock.style.transform = `translate(0, -${25 * progress}%)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(0, 25%)";
                nextBlock.style.transform = "translate(0, -25%)";
            }
        }
    }
    function startRightScrollAnim() {
        const nextBlock = blocksPageObj.blocksArr[currectBlockPosition[0]][currectBlockPosition[1] + 1];
        let progress = 0;
        anim();
        function anim() {
            progress += 0.05;
            if (progress < 1) {
                currectBlock.style.transform = `translate(-${25 * progress}%, 0)`;
                nextBlock.style.transform = `translate(${25 * progress}%, 0)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(-25%, 0)";
                nextBlock.style.transform = "translate(25%, 0)";
            }
        }
    }
    function startBottomScrollAnim() {
        const nextBlock = blocksPageObj.blocksArr[currectBlockPosition[0] + 1][currectBlockPosition[1]];
        let progress = 0;
        anim();
        function anim() {
            progress += 0.05;
            if (progress < 1) {
                currectBlock.style.transform = `translate(0, -${25 * progress}%)`;
                nextBlock.style.transform = `translate(0, ${25 * progress}%)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(0, -25%)";
                nextBlock.style.transform = "translate(0, 25%)";
            }
        }
    }
    function startLeftScrollAnim() {
        const nextBlock = blocksPageObj.blocksArr[currectBlockPosition[0]][currectBlockPosition[1] - 1];
        let progress = 0;
        anim();
        function anim() {
            progress += 0.05;
            if (progress < 1) {
                currectBlock.style.transform = `translate(${25 * progress}%, 0)`;
                nextBlock.style.transform = `translate(-${25 * progress}%, 0)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(25%, 0)";
                nextBlock.style.transform = "translate(-25%, 0)";
            }
        }
    }
    function endTopScrollAnim() {
        const prevBlock = blocksPageObj.blocksArr[currectBlockPosition[0] + 1][currectBlockPosition[1]];
        let progress = 0;
        anim();
        function anim() {
            progress -= 0.05;
            if (progress > 0) {
                currectBlock.style.transform = `translate(0, -${25 * progress}%)`;
                prevBlock.style.transform = `translate(0, ${25 * progress}%)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(0, 0)";
                prevBlock.style.transform = "translate(0, 0)";
            }
        }
    }
    function endRightScrollAnim() {
        const prevBlock = blocksPageObj.blocksArr[currectBlockPosition[0]][currectBlockPosition[1] - 1];
        let progress = 0;
        anim();
        function anim() {
            progress -= 0.05;
            if (progress > 0) {
                currectBlock.style.transform = `translate(${25 * progress}%, 0)`;
                prevBlock.style.transform = `translate(-${25 * progress}%, 0)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(0, 0)";
                prevBlock.style.transform = "translate(0, 0)";
            }
        }
    }
    function endBottomScrollAnim() {
        const prevBlock = blocksPageObj.blocksArr[currectBlockPosition[0] - 1][currectBlockPosition[1]];
        let progress = 0;
        anim();
        function anim() {
            progress -= 0.05;
            if (progress > 0) {
                currectBlock.style.transform = `translate(0, ${25 * progress}%)`;
                prevBlock.style.transform = `translate(0, -${25 * progress}%)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(0, 0)";
                prevBlock.style.transform = "translate(0, 0)";
            }
        }
    }
    function endLeftScrollAnim() {
        const prevBlock = blocksPageObj.blocksArr[currectBlockPosition[0]][currectBlockPosition[1] + 1];
        let progress = 0;
        anim();
        function anim() {
            progress -= 0.05;
            if (progress > 0) {
                currectBlock.style.transform = `translate(-${25 * progress}%, 0)`;
                prevBlock.style.transform = `translate(${25 * progress}%, 0)`;
                requestAnimationFrame(anim);
            }
            else {
                currectBlock.style.transform = "translate(0, 0)";
                prevBlock.style.transform = "translate(0, 0)";
            }
        }
    }
}



/***/ }),

/***/ "./src/js/compTs/sections-height.js":
/*!******************************************!*\
  !*** ./src/js/compTs/sections-height.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// function sectionsHeight () {
//   const wrapper: HTMLDivElement = document.querySelector(".wrapper");
//   const sections: NodeListOf<HTMLElement> = wrapper.querySelectorAll(".wrapper__child");
//   sections.forEach((item: HTMLElement) => item.style.maxHeight = `${window.innerHeight}px`)
// }
// document.addEventListener("DOMContentLoaded", sectionsHeight);
// window.addEventListener("resize", sectionsHeight);
function recordMaxBlockHeight(...blocks) {
    blocks.forEach((item) => {
        if (!Array.isArray(item) && !(item instanceof NodeList)) {
            item.style.maxHeight = `${window.innerHeight}px`;
        }
        else {
            item.forEach((elem) => elem.style.maxHeight = `${window.innerHeight}px`);
        }
    });
}
function startRecordMaxBlockHeight() {
    const wrapper = document.querySelector(".wrapper");
    const wrapperChild = wrapper.querySelectorAll(".wrapper__child");
    const scontrols = document.querySelector(".scontrols");
    recordMaxBlockHeight(wrapperChild, scontrols);
}
document.addEventListener("DOMContentLoaded", startRecordMaxBlockHeight);
window.addEventListener("resize", startRecordMaxBlockHeight);


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _compTs_appTs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compTs/appTs.js */ "./src/js/compTs/appTs.js");

})();

/******/ })()
;